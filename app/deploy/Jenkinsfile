pipeline {
    agent any
    stages {

        stage('Create Image') {
            steps {
                sh '''
                docker image rm 10.8.60.126:5000/devsecops:v${BUILD_NUMBER} || echo "No existing image found"
                docker-compose -f app/deploy/docker-compose.yaml build --no-cache
                '''
            }
        }

        stage("Misconfig Scanner"){
            steps{
                sh '''
                cd app/
                mkdir /var/www/html/trivy/pipeline${BUILD_NUMBER}/
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportconfig.html
                trivy config . --format template --template "@deploy/html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportconfig.html --ignore-unfixed --severity CRITICAL
                '''
            }
        }

         stage("Filesystem Scanner"){
            steps{
                sh '''
                cd app/
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportfilesystem.html
                trivy fs . --format template --template "@deploy/html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportfilesystem.html --ignore-unfixed --severity CRITICAL
                '''
            }
        }

        stage("Vulnerability and Secret Scanner"){
            steps{
                sh '''
                cd app/deploy
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretpython.html
                trivy image --format template --template "@html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretpython.html --ignore-unfixed --severity CRITICAL 10.8.60.126:5000/devsecops:v${BUILD_NUMBER} 
                
                touch /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretdb.html
                trivy image --format template --template "@html.tpl" -o /var/www/html/trivy/pipeline${BUILD_NUMBER}/reportimagesecretdb.html --ignore-unfixed --severity CRITICAL mariadb:10.6.3
                '''
            }
        }

        stage('Push Image to nexus') {
            steps {
                sh '''
                set +x
                docker login --username=admin --password=$nexusPassword 10.8.60.126:5000
                set -x
                docker push 10.8.60.126:5000/devsecops:v${BUILD_NUMBER}
                '''
            }
        }
        stage('Run the docker compose') {
            steps {
                sh '''
                docker-compose -f app/deploy/docker-compose.yaml stop
                docker-compose -f app/deploy/docker-compose.yaml up -d
                '''
            }
        }
    }
}
